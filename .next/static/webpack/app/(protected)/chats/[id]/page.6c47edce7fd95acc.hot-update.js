"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(protected)/chats/[id]/page",{

/***/ "(app-pages-browser)/./features/chat/components/SpeechToText.tsx":
/*!***************************************************!*\
  !*** ./features/chat/components/SpeechToText.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SpeechToText)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n\nvar _s = $RefreshSig$();\nfunction SpeechToText(param) {\n    let { input = \"\", onTranscript, waveformRef, setIsListening } = param;\n    _s();\n    const [isSupported, setIsSupported] = useState(true);\n    const [supportedMimeType, setSupportedMimeType] = useState(null);\n    const recognitionRef = useRef(null);\n    const wavesurferRef = useRef(null);\n    const recordPluginRef = useRef(null);\n    // Check for supported MIME types\n    useEffect(()=>{\n        const mimeTypes = [\n            \"audio/webm\",\n            \"audio/mp4\",\n            \"audio/ogg\",\n            \"audio/wav\",\n            \"audio/webm;codecs=opus\",\n            \"audio/webm;codecs=pcm\",\n            \"audio/webm;codecs=vorbis\"\n        ];\n        const supported = mimeTypes.find((type)=>{\n            try {\n                return MediaRecorder.isTypeSupported(type);\n            } catch (e) {\n                return false;\n            }\n        });\n        if (supported) {\n            console.log(\"Using supported MIME type: \".concat(supported));\n            setSupportedMimeType(supported);\n        } else {\n            console.error(\"No supported MIME types found for MediaRecorder\");\n            setSupportedMimeType(\"audio/webm\");\n        }\n    }, []);\n    useEffect(()=>{\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        if (!SpeechRecognition) {\n            setIsSupported(false);\n            return;\n        }\n        if (waveformRef.current) {\n            // Initialize WaveSurfer only when waveformRef is available\n            wavesurferRef.current = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: \"#10B981\",\n                progressColor: \"#059669\",\n                cursorColor: \"transparent\",\n                barWidth: 2,\n                barGap: 3,\n                height: 60,\n                normalize: true,\n                backend: \"WebAudio\"\n            });\n            try {\n                recordPluginRef.current = wavesurferRef.current.registerPlugin(RecordPlugin.create({\n                    renderRecordedAudio: false\n                }));\n            } catch (error) {\n                console.error(\"Error initializing record plugin:\", error);\n            }\n        }\n        recognitionRef.current = new SpeechRecognition();\n        recognitionRef.current.continuous = true;\n        recognitionRef.current.interimResults = true;\n        recognitionRef.current.lang = \"en-US\";\n        recognitionRef.current.onresult = (event)=>{\n            const current = event.resultIndex;\n            const result = event.results[current];\n            const transcriptText = result[0].transcript;\n            if (result.isFinal) {\n                onTranscript(input + \" \" + transcriptText);\n            }\n        };\n        recognitionRef.current.onerror = (event)=>{\n            console.error(\"Speech recognition error\", event.error);\n            toast.error(\"Speech recognition error: \" + event.error);\n            setIsListening(false);\n        };\n        return ()=>{\n            if (recognitionRef.current) {\n                recognitionRef.current.stop();\n                setIsListening(false);\n            }\n            if (wavesurferRef.current) {\n                wavesurferRef.current.destroy();\n            }\n        };\n    }, [\n        onTranscript,\n        waveformRef\n    ]);\n    const toggleListening = async ()=>{\n        if (isListening) {\n            stopListening();\n        } else {\n            startListening();\n        }\n    };\n    const startListening = async ()=>{\n        try {\n            var _recognitionRef_current;\n            setIsListening(true);\n            (_recognitionRef_current = recognitionRef.current) === null || _recognitionRef_current === void 0 ? void 0 : _recognitionRef_current.start();\n            if (recordPluginRef.current && supportedMimeType) {\n                await recordPluginRef.current.startRecording({\n                    mimeType: supportedMimeType,\n                    audio: {\n                        channelCount: 1,\n                        sampleRate: 44100\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Error starting speech recognition:\", error);\n            toast.error(\"Speech recognition error: \" + error);\n            setIsListening(false);\n        }\n    };\n    const stopListening = ()=>{\n        var _recognitionRef_current, _recordPluginRef_current, _wavesurferRef_current;\n        setIsListening(false);\n        (_recognitionRef_current = recognitionRef.current) === null || _recognitionRef_current === void 0 ? void 0 : _recognitionRef_current.stop();\n        (_recordPluginRef_current = recordPluginRef.current) === null || _recordPluginRef_current === void 0 ? void 0 : _recordPluginRef_current.stopRecording();\n        (_wavesurferRef_current = wavesurferRef.current) === null || _wavesurferRef_current === void 0 ? void 0 : _wavesurferRef_current.empty();\n    };\n    if (!isSupported) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4 bg-yellow-50 text-yellow-800 rounded-lg\",\n            children: \"Speech recognition is not supported in your browser. Please try Chrome, Edge, or Safari.\"\n        }, void 0, false, {\n            fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n            lineNumber: 154,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-2\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Button, {\n                type: \"button\",\n                onClick: toggleListening,\n                variant: isListening ? \"destructive\" : \"ghost\",\n                size: \"sm\",\n                className: \"flex-shrink-0\",\n                children: isListening ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MicOff, {\n                    className: \"h-4 w-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n                    lineNumber: 172,\n                    columnNumber: 13\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Mic, {\n                    className: \"h-4 w-4\"\n                }, void 0, false, {\n                    fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n                    lineNumber: 174,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n                lineNumber: 164,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n            lineNumber: 163,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/asadnaeem/Desktop/book-vision-fyp/features/chat/components/SpeechToText.tsx\",\n        lineNumber: 162,\n        columnNumber: 5\n    }, this);\n}\n_s(SpeechToText, \"yVyWrizLhHzMb+mR45FFBnMaFUw=\");\n_c = SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./features/chat/components/SpeechToText.tsx\n"));

/***/ })

});